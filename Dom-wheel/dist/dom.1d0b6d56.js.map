{"version":3,"sources":["dom.js"],"names":["window","dom","test","console","log","create","htmlStr","template","document","createElement","innerHTML","trim","content","firstChild","append","parent","child","length","appendChild","shift","after","node","aftNode","parentNode","insertBefore","next","before","befNode","wrap","par","remove","removeChild","empty","array","cur","push"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,kBACJ;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GAHU;AAIXC,EAAAA,MAJW,kBAIJC,OAJI,EAIK;AACd,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBJ,OAAO,CAACK,IAAR,EAArB;AACA,WAAOJ,QAAQ,CAACK,OAAT,CAAiBC,UAAxB;AACD,GARU;AASXC,EAAAA,MATW,kBASJC,MATI,EASIC,KATJ,EASW;AACpB,QAAI,YAAYA,KAAhB,EAAuB;AACrB;AACA,aAAOA,KAAK,CAACC,MAAb,EAAqB;AACnBF,QAAAA,MAAM,CAACG,WAAP,CAAmBF,KAAK,CAACG,KAAN,EAAnB;AACD;AACF,KALD,MAKO;AACL;AACAJ,MAAAA,MAAM,CAACG,WAAP,CAAmBF,KAAnB;AACD;AACF,GAnBU;AAoBXI,EAAAA,KApBW,iBAoBLC,IApBK,EAoBCC,OApBD,EAoBU;AACnB;AACA;AACA;AACAD,IAAAA,IAAI,CAACE,UAAL,CAAgBC,YAAhB,CAA6BF,OAA7B,EAAsCD,IAAI,CAACI,IAA3C;AACD,GAzBU;AA0BXC,EAAAA,MA1BW,kBA0BJL,IA1BI,EA0BEM,OA1BF,EA0BW;AACpBN,IAAAA,IAAI,CAACE,UAAL,CAAgBC,YAAhB,CAA6BG,OAA7B,EAAsCN,IAAtC;AACD,GA5BU;AA6BXO,EAAAA,IA7BW,gBA6BNP,IA7BM,EA6BAf,OA7BA,EA6BS;AAClB,QAAIuB,GAAG,GAAG5B,GAAG,CAACI,MAAJ,CAAWC,OAAX,CAAV;AACAL,IAAAA,GAAG,CAACyB,MAAJ,CAAWL,IAAX,EAAiBQ,GAAjB;AACAA,IAAAA,GAAG,CAACX,WAAJ,CAAgBG,IAAhB;AACD,GAjCU;AAkCXS,EAAAA,MAlCW,kBAkCJT,IAlCI,EAkCE;AACX;AACAA,IAAAA,IAAI,CAACE,UAAL,CAAgBQ,WAAhB,CAA4BV,IAA5B;AACA,WAAOA,IAAP;AACD,GAtCU;AAuCXW,EAAAA,KAvCW,iBAuCLX,IAvCK,EAuCC;AACV;AACA,QAAMY,KAAK,GAAG,EAAd;AACA,QAAIC,GAAG,GAAGb,IAAI,CAACR,UAAf;;AACA,WAAOqB,GAAP,EAAY;AACVD,MAAAA,KAAK,CAACE,IAAN,CAAWlC,GAAG,CAAC6B,MAAJ,CAAWT,IAAI,CAACR,UAAhB,CAAX;AACAqB,MAAAA,GAAG,GAAGb,IAAI,CAACR,UAAX;AACD;AACF;AA/CU,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  test() {\r\n    console.log('暴露测试');\r\n  },\r\n  create(htmlStr) {\r\n    let template = document.createElement('template');\r\n    template.innerHTML = htmlStr.trim();\r\n    return template.content.firstChild;\r\n  },\r\n  append(parent, child) {\r\n    if ('length' in child) {\r\n      //传入的是数组;\r\n      while (child.length) {\r\n        parent.appendChild(child.shift());\r\n      }\r\n    } else {\r\n      //传入的是对象\r\n      parent.appendChild(child);\r\n    }\r\n  },\r\n  after(node, aftNode) {\r\n    //将参照节点设置为当前节点的下一个节点\r\n    //新节点就插入到当前节点的下一个节点之前\r\n    //自然就插在当前节点之后了\r\n    node.parentNode.insertBefore(aftNode, node.next);\r\n  },\r\n  before(node, befNode) {\r\n    node.parentNode.insertBefore(befNode, node);\r\n  },\r\n  wrap(node, htmlStr) {\r\n    let par = dom.create(htmlStr);\r\n    dom.before(node, par);\r\n    par.appendChild(node);\r\n  },\r\n  remove(node) {\r\n    //删除并返回子节点\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    //删除并返回所有子节点\r\n    const array = [];\r\n    let cur = node.firstChild;\r\n    while (cur) {\r\n      array.push(dom.remove(node.firstChild));\r\n      cur = node.firstChild;\r\n    }\r\n  }\r\n};\r\n"]}